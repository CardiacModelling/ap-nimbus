--- Chaste/python/hostconfig/default.py.orig
+++ Chaste/python/hostconfig/default.py
@@ -49,7 +49,7 @@
 
 #EDIT HERE
 #For a simple installation all paths will be below this directory
-chaste_libs_path =  '/Users/administrator1/Documents/chaste-libs'
+chaste_libs_path =  '<chaste-libs-dir>'
 #EDIT HERE
 
 if not os.path.exists(chaste_libs_path) or not os.path.isdir(chaste_libs_path):
@@ -57,13 +57,14 @@
         "not found; please edit python/hostconfig/default.py"
     sys.exit(1)
 
-petsc_3_0_path = chaste_libs_path+'petsc-3.0.0-p8/'
-petsc_2_3_path = chaste_libs_path+'petsc-2.3.3-p15/'
+petsc_3_0_path = ''
+petsc_2_3_path = ''
+petsc_path = chaste_libs_path
 petsc_build_name = 'linux-gnu'
 petsc_build_name_profile = 'linux-gnu'
-petsc_build_name_optimized = 'linux-gnu-opt'
+petsc_build_name_optimized = ''
 dealii_path = ''
-parmetis_path = chaste_libs_path+'/ParMetis-3.1/'
+parmetis_path = chaste_libs_path
 # If you have the Intel compiler installed, set this to the folder where it lives
 intel_path = '/opt/intel/cc/9.1.039/'
 # You may need to edit this to ensure that the intel compiler finds the right gcc libraries, e.g.
@@ -71,27 +72,17 @@
 icpc = 'icpc'
 
 if os.uname()[4] == 'x86_64':
-    xsd_path = chaste_libs_path + 'xsd-3.2.0-x86_64-linux-gnu/'
+    xsd_path = chaste_libs_path
 else:
     xsd_path = chaste_libs_path+'xsd-3.2.0-i686-linux-gnu/'
 
-other_includepaths = [chaste_libs_path+'hdf5/include',
-                      chaste_libs_path+'xerces/include',
-                      chaste_libs_path+'boost/include/boost-1_34_1',
-                      xsd_path + 'libxsd',
-                      parmetis_path]
+other_includepaths = [chaste_libs_path+'include']
 
-other_libpaths = [chaste_libs_path+'lib',
-                  chaste_libs_path+'boost/lib', 
-                  chaste_libs_path+'xerces/lib',
-                  chaste_libs_path+'hdf5/lib',
-                  chaste_libs_path+'rdf/lib',
-                  os.path.join(petsc_2_3_path, 'externalpackages/f2cblaslapack/linux-gnu'),
-                  parmetis_path]
+other_libpaths = []
 
 # The order of libraries in these lists matters!
 # Note that boost serialization sometimes has a different name: eg boost_serialization-gcc41
-other_libraries = ['boost_serialization', 'boost_filesystem', 'xerces-c', 'hdf5', 'z', 'parmetis', 'metis']
+other_libraries = ['boost_serialization', 'boost_filesystem', 'boost_system', 'boost_program_options', 'xerces-c', 'hdf5', 'z', 'parmetis', 'metis', 'execinfo']
 
 # If using Boost >= 1.42, uncomment the following line
 #other_libraries.append('boost_system')
@@ -106,9 +97,9 @@
 # Note that boost serialization sometimes has a different name:
 # other_libraries = ['boost_serialization-gcc41', 'xerces-c', 'hdf5', 'z', 'parmetis', 'metis']
 
-tools = {'mpirun': chaste_libs_path+'mpi/bin/mpirun',
-         'mpicxx': chaste_libs_path+'mpi/bin/mpicxx',
-         'xsd': xsd_path+'bin/xsd'}
+tools = {'mpirun': chaste_libs_path+'bin/mpirun',
+         'mpicxx': chaste_libs_path+'bin/mpicxx',
+         'xsd': chaste_libs_path+'bin/xsd'}
 
 
 def Configure(prefs, build):
@@ -122,7 +113,7 @@
     global use_vtk
     
     # use_vtk defaults to True. Change to False if VTK development libraries are not available.
-    use_vtk = int(prefs.get('use-vtk', True))
+    use_vtk = int(prefs.get('use-vtk', False))
     
     # VTK is required for adaptivity to work, so if vtk is turned off, turn off adaptivity too.
     # See also https://chaste.cs.ox.ac.uk/trac/wiki/InstallAdaptivityLibrary
@@ -140,9 +131,9 @@
         other_libraries.extend(['vtkFiltering', 'vtkIO', 'vtkCommon', 'vtksys', 'vtkzlib', 'vtkexpat', 'vtkGraphics'])
     
     # Chaste may also optionally link against CVODE.
-    use_cvode = int(prefs.get('use-cvode', False))
+    use_cvode = int(prefs.get('use-cvode', True))
     if use_cvode:
-        other_includepaths.append(chaste_libs_path+'cvode/include')
+#        other_includepaths.append(chaste_libs_path+'cvode/include')
         DetermineCvodeVersion(other_includepaths[-1])
-        other_libpaths.append(chaste_libs_path+'cvode/lib')
+#        other_libpaths.append(chaste_libs_path+'cvode/lib')
         other_libraries.extend(['sundials_cvode', 'sundials_nvecserial'])
